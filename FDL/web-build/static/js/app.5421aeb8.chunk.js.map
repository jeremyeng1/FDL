{"version":3,"sources":["redux/store.js","redux/types.js","components/util/StyledText.js","pages/Login.js","pages/Signup.js","components/HeaderLeft.js","components/util/MenuItems.js","components/HeaderRight.js","components/productCard.js","pages/Home.js","pages/Profile.js","pages/Wallet.js","pages/Artists.js","pages/Collections.js","components/MainScreen.js","components/productDetails.js","pages/NFT.js","pages/Countdown.js","pages/route.js","App.js","assets/static/fdl-logo.png","assets/icons/Coming-Soon.svg","assets/static/jake-album.jpeg"],"names":["initialState","authenticated","loading","credentials","user","artists","nfts","store","createContext","Provider","StateProvider","children","useReducer","state","action","type","payload","errors","dispatch","value","StyledText","fontSize","fontWeight","color","fontFamily","styles","StyleSheet","create","text","parseInt","View","Text","style","container","justifyContent","backgroundColor","height","centered","alignItems","navigation","flexDirection","input","width","margin","padding","border","borderRadius","account","marginBottom","button","paddingVertical","paddingHorizontal","cursor","Login","useContext","token","localStorage","FBIdToken","useEffect","jwtDecode","exp","Date","now","removeItem","axios","defaults","headers","common","error","console","log","useState","email","setEmail","password","setPassword","loginUser","userData","history","post","then","res","setItem","setAuthorizationHeader","data","catch","err","TextInput","placeholder","onChangeText","secureTextEntry","Pressable","onPress","navigate","Signup","handle","setHandle","signupUser","newUserData","marginLeft","HeaderLeft","useNavigation","TouchableOpacity","toggleDrawer","name","size","iconName","marginRight","HeaderRight","marginVertical","marginHorizontal","image","gold","ProductCard","title","author","Image","source","paddingTop","StatusBar","currentHeight","sectionTitle","sectionContainer","sectionDescription","marginTop","productList","overflow","Home","globalState","get","SafeAreaView","FlatList","ListHeaderComponent","renderItem","item","push","id","imgURL","artist","numColumns","require","row","header","paddingLeft","paragraph","divider","borderWidth","borderColor","Profile","isActive","setActive","fetch","resp","json","Object","keys","bio","keyExtractor","horizontal","showsHorizontalScrollIndicator","Wallet","flex","Artists","Collections","Drawer","createDrawerNavigator","MainScreen","Navigator","drawerType","initialRouteName","screenOptions","activeTintColor","itemStyle","drawerLabelStyle","drawerActiveTintColor","drawerInactiveTintColor","drawerActiveBackgroundColor","headerTitleAlign","headerLeft","headerRight","headerTitle","Group","MenuItems","map","drawer","Screen","key","component","ProductDetails","price","NFT","route","params","details","setDetails","description","Countdown","startDate","rDay","setRDay","rHour","setRHour","rMin","setRMin","rSec","setRSec","getTime","currentDays","getDate","remainingHours","getHours","getMinutes","getSeconds","remainingHour","Math","floor","remainingMinute","remainingSecond","i","setInterval","clearInterval","background","section","slice","Stack","createNativeStackNavigator","Route","options","headerShown","animationEnabled","linking","prefixes","config","screens","App","useFonts","Montserrat_300Light","Montserrat_600SemiBold","Montserrat_800ExtraBold","Montserrat_700Bold","NavigationContainer","module","exports"],"mappings":"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","file":"static/js/app.5421aeb8.chunk.js","sourcesContent":["// Where everything is being stored in the state\n\nimport {\n  SET_ARTISTS,\n  SET_USER,\n  SET_USERS,\n  SET_AUTHENTICATED,\n  SET_UNAUTHENTICATED,\n  SET_NFTS,\n  LOADING_USER,\n  SET_ERRORS,\n  CLEAR_ERRORS\n} from './types';\nimport React, { createContext, useReducer } from 'react';\n\n\n// everything in state (b4 logging in) should be empty\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  user: {}, // empty user data before logging in\n  artists: {},\n  nfts: []\n};\n\n// store is the object (in the state) that stores the users\nconst store = createContext(initialState);\nconst { Provider } = store;\n\nconst StateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer((state = initialState, action) => {\n    switch (action.type) {\n      case SET_AUTHENTICATED:\n        return {\n          ...state,\n          authenticated: true\n        };\n      case SET_UNAUTHENTICATED:\n        return initialState;\n      case SET_USER:\n        return {\n          // will set user object using log in info\n          ...state,\n          authenticated: true,\n          loading: false,\n          user: action.payload\n        };\n      case LOADING_USER:\n        return {\n          ...state,\n          loading: true\n        };\n      case SET_ERRORS:\n        return {\n          ...state,\n          loading: false,\n          errors: action.payload\n        };\n      case CLEAR_ERRORS:\n        return {\n          ...state,\n          loading: false,\n          errors: null\n        };\n      // test case rn\n      case SET_USERS: \n        return {\n          ...state,\n          user: action.payload\n          // set user object\n          // data we get from api (with endpoint of users)\n        }\n      case SET_ARTISTS:\n        return {\n          ...state,\n          artists: action.payload\n        }\n      case SET_NFTS:\n        return {\n          ...state,\n          nfts: action.payload\n        }\n      default:\n        return state;\n    };\n  }, initialState);\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider }","// User types\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\nexport const SET_USER = 'SET_USER';\nexport const LOADING_USER = 'LOADING_USER';\n// UI types\nexport const SET_ERRORS = 'SET_ERRORS';\nexport const LOADING_UI = 'LOADING_UI';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const SET_NFTS = 'SET_NFTS';\n// etc... may have to add additional things to state.\n// artist types\nexport const SET_ARTISTS = 'SET_ARTISTS';\n//Test type\nexport const SET_USERS = 'SET_USERS';","import React from 'react';\nimport {StyleSheet, Text, View} from 'react-native';\n\nconst StyledText = ({children, fontSize, fontWeight, color}) => {\n  let fontFamily = '';\n  switch(fontWeight){\n    case \"300\":\n      fontFamily = 'Montserrat_300Light'\n      break;\n    case \"600\":\n      fontFamily = 'Montserrat_600SemiBold'\n      break;\n    case \"700\":\n      fontFamily = 'Montserrat_700Bold'\n      break;\n    case \"800\":\n      fontFamily = 'Montserrat_800ExtraBold'\n      break;\n    default:\n      fontFamily = 'Montserrat_300Light'\n      break;\n  }\n  const styles = StyleSheet.create({\n    text: {\n      fontFamily: fontFamily,\n      fontSize: parseInt(fontSize, 10),\n      fontWeight: fontWeight,\n      color: color,\n    },\n  });\n  return (\n    <View>\n      <Text style={styles.text}>{children}</Text>\n    </View>\n  );\n};\n\nexport default StyledText;\n","import jwtDecode from \"jwt-decode\";\nimport React, { useContext, useState, useEffect } from 'react'\nimport { View, TextInput, Pressable, StyleSheet, Text } from 'react-native'\nimport StyledText from '../components/util/StyledText';\nimport axios from 'axios'\n\nimport { SET_UNAUTHENTICATED, SET_AUTHENTICATED } from '../redux/types';\nimport { store } from '../redux/store';\n\nconst setAuthorizationHeader = (token) => {\n  const FBIdToken = `Bearer ${token}`;\n  localStorage.setItem('FBIdToken', FBIdToken);\n  axios.defaults.headers.common['Authorization'] = FBIdToken;\n};\n\nconst Login = ({navigation}) => {\n  const globalState = useContext(store);\n  const { dispatch } = globalState;\n\n  const token = localStorage.FBIdToken;\n\n  useEffect(() => {\n    try {\n      if (token) {\n        const decodedToken = jwtDecode(token);\n        if (decodedToken.exp * 1000 < Date.now()) {\n          dispatch({ type: SET_UNAUTHENTICATED });\n          localStorage.removeItem('FBIdToken');\n          delete axios.defaults.headers.common['Authorization'];\n        } else {\n          dispatch({ type: SET_AUTHENTICATED });\n          axios.defaults.headers.common['Authorization'] = token;\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n   \n  }, [])\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const loginUser = (userData, history) => {\n    axios\n      .post('http://api.fdlnft.art/signin', userData)\n      .then((res) => {\n        setAuthorizationHeader(res.data.token);\n        dispatch({ type: SET_AUTHENTICATED });\n        // dispatch({ type: SET_USER, payload: res.data.token });\n        // console.log(res.data.token);\n        // history.push('/');\n      })\n      .catch((err) => {\n        console.log(err);\n        // dispatch({\n        //   type: SET_ERRORS,\n        //   payload: err.response.data\n        // });\n      });\n  }\n  return (\n    <View style={[styles.container]}>\n      <View style={[styles.centered]}>\n        <TextInput\n          style={[styles.input]}\n          placeholder=\"Email Address\"\n          value={email}\n          onChangeText={setEmail}\n        />\n        <TextInput\n          style={[styles.input]}\n          placeholder=\"Password\"\n          value={password}\n          onChangeText={setPassword}\n          secureTextEntry\n        />\n        <Pressable style={[styles.button]} onPress={() => loginUser({ email: email, password: password })}>\n          <StyledText\n            children=\"Log in\"\n            color=\"#fff\"\n            fontSize=\"20\"\n            fontWeight=\"600\"\n          />\n        </Pressable>\n      </View>\n      <View style={[styles.navigation, styles.account]}>\n        <StyledText\n          children=\"Don't have an account? \"\n          color=\"#000\"\n          fontSize=\"20\"\n          fontWeight=\"600\"\n        />\n        <Pressable onPress={() => {navigation.navigate('Signup')}}>\n          <StyledText\n            children=\"Sign Up\"\n            color=\"#A07D28\"\n            fontSize=\"20\"\n            fontWeight=\"600\"\n          />\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'space-between',\n    backgroundColor: '#fff',\n    height: '100%'\n  },\n  centered: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  navigation: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  input: {\n    height: 40,\n    width: '70%',\n    margin: 10,\n    padding: 5,\n    fontFamily: 'Montserrat_300Light',\n    border: '1px solid #000',\n    borderRadius: 5\n  },\n  account: {\n    marginBottom: 20,\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 150,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 4,\n    backgroundColor: 'rgba(160, 125, 40, 0.7);',\n    cursor: 'pointer'\n  },\n});\n\nexport default Login\n","import React, { useContext, useState } from 'react'\nimport { View, TextInput, Pressable, StyleSheet } from 'react-native'\nimport StyledText from '../components/util/StyledText';\nimport axios from 'axios'\n\nimport { SET_AUTHENTICATED } from '../redux/types';\nimport { store } from '../redux/store';\n\nconst setAuthorizationHeader = (token) => {\n  const FBIdToken = `Bearer ${token}`;\n  localStorage.setItem('FBIdToken', FBIdToken);\n  axios.defaults.headers.common['Authorization'] = FBIdToken;\n};\n\nconst Signup = ({navigation}) => {\n  const [email, setEmail] = useState('');\n  const [handle, setHandle] = useState('');\n  const [password, setPassword] = useState('');\n\n  const globalState = useContext(store);\n  const { dispatch } = globalState;\n\n  const signupUser = (newUserData) => {\n    // dispatch({ type: LOADING_UI });\n    axios\n      .post('http://api.fdlnft.art/signup', newUserData)\n      .then((res) => {\n        setAuthorizationHeader(res.data.token);\n        dispatch({ type: SET_AUTHENTICATED });\n      })\n      .catch((err) => {\n        console.log(err);\n        // dispatch({\n        //   type: SET_ERRORS,\n        //   payload: err.response.data\n        // });\n      });\n  }\n  return (\n    <View style={[styles.container]}>\n      <View style={[styles.centered]}>\n        <TextInput\n          style={[styles.input]}\n          placeholder=\"Email Address\"\n          value={email}\n          onChangeText={setEmail}\n        />\n        <TextInput\n          style={[styles.input]}\n          placeholder=\"Username\"\n          value={handle}\n          onChangeText={setHandle}\n        />\n        <TextInput\n          style={[styles.input]}\n          placeholder=\"Password\"\n          value={password}\n          onChangeText={setPassword}\n          secureTextEntry\n        />\n        <Pressable style={[styles.button]} onPress={() => signupUser({ email: email, password: password, handle: handle })\n        }>\n          <StyledText\n            children=\"Sign Up\"\n            color=\"#fff\"\n            fontSize=\"20\"\n            fontWeight=\"600\"\n          />\n        </Pressable>\n      </View>\n      <View style={[styles.navigation, styles.account]}>\n        <StyledText\n          children=\"Have an account? \"\n          color=\"#000\"\n          fontSize=\"20\"\n          fontWeight=\"600\"\n        />\n        <Pressable onPress={() => { navigation.navigate('Login') }}>\n          <StyledText\n            children=\"Login\"\n            color=\"#A07D28\"\n            fontSize=\"20\"\n            fontWeight=\"600\"\n          />\n        </Pressable>\n      </View>\n    </View>\n  )\n}\n\nexport default Signup\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'space-between',\n    backgroundColor: '#fff',\n    height: '100%'\n  },\n  centered: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  navigation: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  input: {\n    height: 40,\n    width: '70%',\n    margin: 10,\n    padding: 5,\n    fontFamily: 'Montserrat_300Light',\n    border: '1px solid #000',\n    borderRadius: 5\n  },\n  account: {\n    marginBottom: 20,\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 150,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 4,\n    backgroundColor: 'rgba(160, 125, 40, 0.7);',\n    cursor: 'pointer'\n  },\n});\n","import React from 'react';\nimport {StyleSheet, TouchableOpacity} from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport {useNavigation} from '@react-navigation/native';\n\nconst HeaderLeft = () => {\n  const navigation = useNavigation();\n\n  return (\n    <TouchableOpacity\n      style={[styles.container]}\n      onPress={() => navigation.toggleDrawer()}>\n      <Icon name=\"bars\" size={25} color=\"#A07D28\" />\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginLeft: 16,\n  },\n});\n\nexport default HeaderLeft;\n","export default [\n  {\n    name: 'My Feed',\n    iconName: 'newspaper-o',\n  },\n  {\n    name: 'My Profile',\n    iconName: 'user',\n  },\n  {\n    name: 'My Artists',\n    iconName: 'paint-brush',\n  },\n  {\n    name: 'My Collection',\n    iconName: 'cog',\n  },\n  {\n    name: 'Wallet',\n    iconName: 'wallet',\n  },\n];\n","import React from 'react';\nimport {StyleSheet, TouchableOpacity} from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n// import {useNavigation} from '@react-navigation/native';\n\nconst HeaderRight = () => {\n  // const navigation = useNavigation();\n\n  return (\n    <TouchableOpacity\n      style={[styles.container]}\n      // onPress={() => navigation.toggleDrawer()}\n    >\n      <Icon name=\"search\" size={25} color=\"#A07D28\" />\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginRight: 16,\n  },\n});\n\nexport default HeaderRight;\n","import React from 'react';\nimport {StyleSheet, Text, View, Image} from 'react-native';\nimport StyledText from './util/StyledText';\n\nconst ProductCard = ({image, title, author}) => {\n  return (\n    <View style={[styles.container]}>\n      <View>\n        <Image style={[styles.image]} source={image} />\n      </View>\n      <View>\n        <StyledText\n          children={title}\n          color=\"#000000\"\n          fontSize=\"20\"\n          fontWeight=\"600\"\n        />\n      </View>\n      <View>\n        <Text style={[styles.gold]}>{author}</Text>\n      </View>\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    width: 170,\n    height: 200,\n    backgroundColor: '#ffffff',\n    marginVertical: 12,\n    marginHorizontal: \"auto\",\n    // borderColor: '#000000',\n    // borderWidth: 1,\n  },\n  image: {\n    width: 170,\n    height: 170,\n    borderRadius: 5,\n  },\n  text: {\n    fontSize: 20,\n    fontWeight: '300',\n    fontFamily: 'Montserrat_400Regular',\n  },\n  gold: {\n    color: '#A07D28',\n    fontFamily: 'Montserrat_400Regular',\n  },\n});\nexport default ProductCard;\n","import React, { useContext, useEffect } from 'react'\n// import type {Node} from 'react';\nimport {\n  // Button,\n  Pressable,\n  FlatList,\n  StatusBar,\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n} from 'react-native';\nimport axios from 'axios'\nimport ProductCard from '../components/productCard';\n\nimport { SET_NFTS } from '../redux/types';\nimport { store } from '../redux/store';\n\nconst Home = ({ navigation }) => {\n  const globalState = useContext(store);\n  const { state, dispatch } = globalState;\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:3000/nft')\n      .then((res) => {\n        dispatch({ type: SET_NFTS, payload: res.data });\n      })\n      .catch((err) => {\n        console.log(err);\n        // dispatch({\n        //   type: SET_ERRORS,\n        //   payload: err.response.data\n        // });\n      });\n  }, [])\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={[styles.sectionContainer]}>\n        <FlatList\n          ListHeaderComponent={() => (\n            <View style={[styles.sectionDescription]}>\n              <Text style={[styles.sectionTitle]}>Trending NFTs</Text>\n            </View>\n          )}\n          data={state?.nfts}\n          renderItem={({ item }) => (\n            <Pressable style={{cursor: 'pointer'}} onPress={() => {\n              navigation.push(\"NFT\", {\n                id: item.id\n              });\n            }}>\n              <ProductCard\n                image={item.imgURL}\n                title={item.name}\n                author={item.artist}\n              />\n            </Pressable>\n          )}\n          numColumns=\"2\"\n        // horizontal={true}\n        // showsHorizontalScrollIndicator={false}\n        />\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: StatusBar.currentHeight,\n    backgroundColor: '#ffffff',\n    height: \"100%\"\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontFamily: 'Montserrat_600SemiBold',\n    fontWeight: '600',\n  },\n  sectionContainer: {\n    height: '100%',\n    marginLeft: 12,\n  },\n  sectionDescription: {\n    marginLeft: 12,\n    marginBottom: 12,\n    marginTop: 13,\n  },\n  productList: {\n    flexDirection: 'row',\n    overflow: 'scroll',\n  },\n});\n\nexport default Home;\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  FlatList,\n  Image,\n  StatusBar,\n  Pressable,\n} from 'react-native';\nimport { SET_USERS } from '../redux/types';\nimport { store } from '../redux/store';\n\nimport ProductCard from '../components/productCard';\nimport StyledText from '../components/util/StyledText';\nimport { getNFTs } from '../redux/actions/nftActions';\n\nconst data = [\n  {\n    // this data will have to be dynamic eventually\n\n    id: '1',\n    title: 'First NFT',\n    author: '@Idriss',\n    image: require('../assets/static/jake-album.jpeg'),\n  },\n  {\n    id: '2',\n    title: 'Second NFT',\n    author: '@Idriss',\n    image: require('../assets/static/jake-album.jpeg'),\n  },\n  {\n    id: '3',\n    title: 'Third NFT',\n    author: '@Idriss',\n    image: require('../assets/static/jake-album.jpeg'),\n  },\n  {\n    id: '4',\n    title: 'Fourth NFT',\n    author: '@Idriss',\n    image: require('../assets/static/jake-album.jpeg'),\n  },\n];\n\nconst Profile = () => {\n  // functional component in react (use func instead of class components)\n  // we can tell func comp bc it has useState (for functional comps ONLY)\n  // useState helps us dynamically change vars\n\n  // defining the state\n  const [isActive, setActive] = useState(false);\n  const globalState = useContext(store);\n  const { dispatch, state } = globalState;\n  \n  // this is superseded by state\n  \n  // isActive is var\n  // setActive is setter (like setter/getter)\n  // setActive is changing the value of isActive\n\n\n  // initializing/declaring bio variable to empty string\n  // const [bio, setBio] = useState(\"\");\n\n  // const [handle, setHandle] = useState(\"\");\n\n  // useEffect(() => {\n  //   console.log(setActive);\n  // }, [setActive]);\n\n  // const [user, setData] = useState({});\n  // declare a NEW function\n  // look up component that's called useEffect for functional components (class components use the didmMount)\n\n\n  // has to be BEFORE return\n  // lambda function (???)\n  useEffect(() => { // useEffect = React\n    fetch(\"http://localhost:3000/crypt\") // fetch the api, and then == JS\n\n      // the return val of fetch is the response to the fetch function, \n      // and this is passed into the resp var which is a param of the func that we're passing into then\n      // func we're passing into then is  --> resp => resp.json()\n\n\n      // then takes the RETURN value of prev function and PUTS that value into the param of the next function\n\n      .then(resp => resp.json()) // this is entire func with resp being parameter\n      // promise to get data in json\n      .then(data => {\n        dispatch({ // exclusive func in state\n          // letting state know that change is going to be made on state\n          type: SET_USERS, // action being changed\n          payload: data // sending data through payload\n        })\n      });\n  }, [])\n  return (\n    // all of this HTML looking stuff is called JSX in React.js\n    <View style={[styles.container]}>\n      <View style={[styles.row]}>\n        <View>\n          <Image\n            style={[styles.image]}\n            source={require('../assets/static/jake-album.jpeg')}\n          />\n        </View>\n        <View>\n          <StyledText\n            // is also a component (just like Profile), this component is being CALLED in (return portion) of Profile (not component of Profile)\n            children=\"Idriss Dimson\" // attributes for component\n            color=\"#000000\"\n            fontSize=\"20\"\n            fontWeight=\"600\"\n          />\n          <StyledText\n          \n          // Dynamically adding in users\n          \n            // this (?.) is called an optional chaining operator. It checks that the statement preceding\n            // the operator is true before running the next parameter\n            // In this case, the code is waiting for state to be defined before it calls the handle property \n            // in the object.\n            children={state.user[Object.keys(state.user)[0]]?.handle}\n            // accessing the first user\n            // what it will be:\n            // children = state.user.handle; // bc we'll have the person logged in\n            \n            \n            // check the braces here, single or double ****\n            // use this for passing vars in attributes in react\n            color=\"#A07D28\"\n            fontSize=\"20\"\n            fontWeight=\"600\"\n          />\n          <Text style={[styles.paragraph]}>\n\n            {/* // Character Count is a free online tool that calculates the number of\n            // ... The one that most people are likely aware of is the 140\n            // character li */}\n\n            {state.user[Object.keys(state.user)[0]]?.bio}\n\n          </Text>\n        </View>\n      </View>\n      <View style={[styles.divider]} />\n      <View style={[styles.container]}>\n        <View style={[styles.header]}>\n          <Pressable\n            onPress={() => {\n              setActive(true);\n            }}>\n            <StyledText\n              children=\"Collection\"\n              color={isActive ? '#000000' : '#00000059'}\n              fontSize=\"20\"\n              fontWeight=\"600\"\n            />\n          </Pressable>\n          <StyledText\n            children=\"/\"\n            color=\"#000000\"\n            fontSize=\"20\"\n            fontWeight=\"600\"\n          />\n          <Pressable\n            onPress={() => {\n              setActive(false);\n            }}>\n            <StyledText\n              children=\"Following\"\n              color={isActive ? '#00000059' : '#000000'}\n              fontSize=\"20\"\n              fontWeight=\"600\"\n            />\n          </Pressable>\n        </View>\n        <Text style={[styles.text]}>{isActive ? 'NFTs' : 'Artists'}</Text>\n        <FlatList\n          data={data}\n          keyExtractor={item => item.id}\n          renderItem={({ item }) => (\n            <ProductCard\n              image={item.image}\n              title={item.title}\n              author={item.author}\n            />\n          )}\n          horizontal={true}\n          showsHorizontalScrollIndicator={false}\n        />\n      </View>\n      <View style={[styles.container]}>\n        <Text style={[styles.text]}>\n          {isActive ? 'Collectibles' : 'Friends'}\n        </Text>\n        <FlatList\n          data={data}\n          keyExtractor={item => item.id}\n          renderItem={({ item }) => (\n            <ProductCard\n              image={item.image}\n              title={item.title}\n              author={item.author}\n            />\n          )}\n          horizontal={true}\n          showsHorizontalScrollIndicator={false}\n        />\n      </View>\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: StatusBar.currentHeight,\n    backgroundColor: '#fff',\n    // flexDirection: 'row',\n    // alignItems: 'center',\n    // borderColor: '#000000',\n    // borderWidth: 1,\n  },\n  row: {\n    padding: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  header: {\n    paddingLeft: 10,\n    flexDirection: 'row',\n  },\n  image: {\n    width: 150,\n    height: 150,\n    borderRadius: 5,\n  },\n\n  text: {\n    paddingLeft: 10,\n    fontSize: 20,\n    fontWeight: '400',\n    fontFamily: 'Montserrat_400Regular',\n  },\n  paragraph: {\n    fontFamily: 'Montserrat_400Regular',\n    width: 200,\n  },\n  divider: {\n    borderWidth: 0.5,\n    borderColor: '#A07D28',\n    margin: 10,\n  },\n});\n\nexport default Profile;\n","import React from 'react';\nimport {View, Text} from 'react-native';\n\nexport default function Wallet() {\n  return (\n    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n      <Text style={{fontSize: 16, fontWeight: '700'}}>Profile Screen</Text>\n    </View>\n  );\n}\n","// added by Iccha below:\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  FlatList,\n  Image,\n  StatusBar,\n  Pressable,\n} from 'react-native';\n//** this should be done for artists\n\n//** instead of SET_USERS it would be SET_ARTISTS\n//** haven't changed because state hasn't been made yet\nimport { SET_ARTISTS } from '../redux/types';\nimport { store } from '../redux/store';\n\nimport ProductCard from '../components/productCard';\nimport StyledText from '../components/util/StyledText';\n\n\n\n//** Hardcoded NFTS here, could have the same ones for now\n//** until NFTs minted and added into DB (then, dynamic)\n\nconst data = [\n  {\n\n    id: '1',\n    title: 'First NFT',\n    author: '@Idriss',\n    image: require('../assets/static/jake-album.jpeg'),\n  },\n  {\n    id: '2',\n    title: 'Second NFT',\n    author: '@Idriss',\n    image: require('../assets/static/jake-album.jpeg'),\n  },\n  {\n    id: '3',\n    title: 'Third NFT',\n    author: '@Idriss',\n    image: require('../assets/static/jake-album.jpeg'),\n  },\n  {\n    id: '4',\n    title: 'Fourth NFT',\n    author: '@Idriss',\n    image: require('../assets/static/jake-album.jpeg'),\n  },\n];\n\n// ** This would be Artist from Artists.js \n// ** instead of Profile (like in users)\n\n\nconst Artists = () => {\n  // functional component in react (use func instead of class components)\n  // we can tell func comp bc it has useState (for functional comps ONLY)\n  // useState helps us dynamically change vars\n\n  // defining the state\n  const [isActive, setActive] = useState(false);\n  const globalState = useContext(store);\n  const { dispatch, state } = globalState;\n\n  // Code below: Superseded by state\n\n  // isActive is a variable\n  // setActive is setter (like setter/getter)\n  // setActive setter is changing the value of isActive var\n\n\n  // initializing/declaring bio & handle variable to empty strin\n  // in the state\n\n  // const [bio, setBio] = useState(\"\");\n  // const [handle, setHandle] = useState(\"\");\n\n  // useEffect(() => {\n  //   console.log(setActive);\n  // }, [setActive]);\n\n  // const [user, setData] = useState({});\n  // declare a NEW function\n  // look up component that's called useEffect for functional components \n  // (class components use the didmMount)\n\n\n  // has to be BEFORE return\n  // lambda function\n  // which is:\n\n  useEffect(() => { // useEffect is used in React.js\n\n    fetch(\"http://localhost:3000/artist\") // fetch the api, and then == JS\n      // artists would be endpoint here, instead of users (or crypt which was a filler)\n\n      // the return val of fetch is the response to the fetch function, \n      // and this is passed into the resp var which is a param of the func that we're passing into \n      // ( called then )\n      // passing a function into the function (named then)\n      // func we're passing into then (function) is  --> resp => resp.json()\n\n\n      // The then function takes the RETURN value of prev function and PUTS that value into the param of the next function\n\n      .then(resp => resp.json()) // this is entire func with resp being parameter\n      // promising to get data in json as param (resp.json)\n\n      .then(data => {\n        dispatch({ // exclusive func in state\n          // letting state know that change is going to be made on state\n\n          type: SET_ARTISTS, // action being changed\n          // ** Should be SET_ARTISTS, not changing bc state hasn't been made\n\n          payload: data // sending data through payload\n        })\n      });\n  }, [])\n  return (\n    // all of this HTML looking stuff is called JSX in React.js\n    <View style={[styles.container]}>\n      <View style={[styles.row]}>\n        <View>\n          <Image\n            style={[styles.image]}\n            source={require('../assets/static/jake-album.jpeg')}\n          />\n        </View>\n        <View>\n          <StyledText\n            // is also a component (just like Profile), this component is being CALLED in (return portion) of Profile (not component of Profile)\n            // children=\"Idriss Dimson\" // attributes for component\n            children={state.artists[Object.keys(state.artists)[0]]?.name}\n            color=\"#000000\"\n            fontSize=\"20\"\n            fontWeight=\"600\"\n          />\n          <StyledText\n            // children=\"@JAKE\"\n            // Dynamically adding in users\n\n            // this (?.) is called an optional chaining operator. It checks that the statement preceding\n            // the operator is true before running the next parameter\n            // In this case, the code is waiting for state to be defined before it calls the handle property \n            // in the object.\n            children={Object.keys(state.artists)[0]}\n            // ** Should be state.artists, not changing bc state hasn't been made\n\n\n\n            // check the braces here, single or double ****\n            // use this for passing vars in attributes in react\n            color=\"#A07D28\"\n            fontSize=\"20\"\n            fontWeight=\"600\"\n          />\n          <Text style={[styles.paragraph]}>\n\n            {/* Character Count is a free online tool that calculates the number of\n            ... The one that most people are likely aware of is the 140\n            character li */}\n\n            {state.artists[Object.keys(state.artists)[0]]?.bio}\n\n          </Text>\n        </View>\n      </View>\n      <View style={[styles.divider]} />\n      <View style={[styles.container]}>\n        <View style={[styles.header]}>\n          <Pressable\n            onPress={() => {\n              setActive(true);\n            }}>\n            <StyledText\n              children=\"Collection\"\n              color={isActive ? '#000000' : '#00000059'}\n              fontSize=\"20\"\n              fontWeight=\"600\"\n            />\n          </Pressable>\n          <StyledText\n            children=\"/\"\n            color=\"#000000\"\n            fontSize=\"20\"\n            fontWeight=\"600\"\n          />\n          {/* <Pressable */}\n          {/*    onPress={() => {\n               setActive(false);\n             }}>\n             <StyledText\n               children=\"Following\"\n               color={isActive ? '#00000059' : '#000000'}\n               fontSize=\"20\"\n               fontWeight=\"600\"\n             />\n           </Pressable> */}\n        </View>\n        <Text style={[styles.text]}>{isActive ? 'NFTs' : 'Artists'}</Text>\n        <FlatList\n          data={data}\n          keyExtractor={item => item.id}\n          renderItem={({ item }) => (\n            <ProductCard\n              image={item.image}\n              title={item.title}\n              author={item.author}\n            />\n          )}\n          horizontal={true}\n          showsHorizontalScrollIndicator={false}\n        />\n\n        <View style={[styles.container]}>\n          <Text style={[styles.text]}>\n            {isActive ? 'Collectibles' : 'Friends'}\n          </Text>\n          <FlatList\n            data={data}\n            keyExtractor={item => item.id}\n            renderItem={({ item }) => (\n              <ProductCard\n                image={item.image}\n                title={item.title}\n                author={item.author}\n              />\n            )}\n            horizontal={true}\n            showsHorizontalScrollIndicator={false}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: StatusBar.currentHeight,\n    backgroundColor: '#fff',\n    // flexDirection: 'row',\n    // alignItems: 'center',\n    // borderColor: '#000000',\n    // borderWidth: 1,\n  },\n  row: {\n    padding: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  header: {\n    paddingLeft: 10,\n    flexDirection: 'row',\n  },\n  image: {\n    width: 150,\n    height: 150,\n    borderRadius: 5,\n  },\n\n  text: {\n    paddingLeft: 10,\n    fontSize: 20,\n    fontWeight: '400',\n    fontFamily: 'Montserrat_400Regular',\n  },\n  paragraph: {\n    fontFamily: 'Montserrat_400Regular',\n    width: 200,\n  },\n  divider: {\n    borderWidth: 0.5,\n    borderColor: '#A07D28',\n    margin: 10,\n  },\n});\n\nexport default Artists;\n","import React from 'react';\nimport {View, Text} from 'react-native';\n\nexport default function Collections() {\n  return (\n    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n      <Text style={{fontSize: 16, fontWeight: '700'}}>Collections</Text>\n    </View>\n  );\n}\n","import React from 'react'\nimport { StyleSheet, View, Text } from 'react-native'\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport StyledText from '../components/util/StyledText';\nimport HeaderLeft from '../components/HeaderLeft';\nimport MenuItems from '../components/util/MenuItems';\nimport HeaderRight from '../components/HeaderRight';\n\nimport Home from '../pages/Home';\nimport Profile from '../pages/Profile';\nimport Wallet from '../pages/Wallet';\nimport Artists from '../pages/Artists';\nimport Collections from '../pages/Collections';\nimport SettingScreen from '../pages/SettingScreen';\nimport HelpSection from '../pages/HelpSection';\n\nconst Drawer = createDrawerNavigator();\nconst MainScreen = () => {\n  return (\n    <Drawer.Navigator\n      drawerType=\"front\"\n      initialRouteName=\"Home\"\n      screenOptions={{\n        activeTintColor: '#A07D28',\n        itemStyle: { marginVertical: 10 },\n        drawerLabelStyle: {\n          fontFamily: 'Montserrat_700Bold',\n        },\n        drawerActiveTintColor: '#A07D28',\n        drawerInactiveTintColor: '#000000',\n        drawerActiveBackgroundColor: '#ffffff',\n        headerTitleAlign: 'center',\n        headerLeft: () => {\n          return <HeaderLeft />;\n        },\n        headerRight: () => {\n          return <HeaderRight />;\n        },\n        headerTitle: () => {\n          return (\n            <View style={[styles.container]}>\n              <StyledText\n                children=\"A\"\n                fontSize=\"24\"\n                fontWeight=\"700\"\n                color=\"#000000\"\n              />\n              <StyledText\n                children=\"V\"\n                fontSize=\"24\"\n                fontWeight=\"700\"\n                color=\"#A07D28\"\n              />\n              <StyledText\n                children=\"THX\"\n                fontSize=\"24\"\n                fontWeight=\"700\"\n                color=\"#000000\"\n              />\n            </View>\n          );\n        },\n      }}>\n      <Drawer.Group>\n        {MenuItems.map(drawer => (\n          <Drawer.Screen\n            key={drawer.name}\n            name={drawer.name}\n            component={\n              drawer.name === 'My Feed'\n                ? Home\n                : drawer.name === 'My Profile'\n                  ? Profile\n                  : drawer.name === 'My Artists'\n                    ? Artists\n                    : drawer.name === 'My Collection'\n                      ? Collections\n                      : Wallet\n            }\n          />\n        ))}\n      </Drawer.Group>\n    </Drawer.Navigator>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n    // marginBottom: 20,\n  },\n});\nexport default MainScreen;","import React from 'react';\nimport {StyleSheet, View, Pressable, Text} from 'react-native';\nimport StyledText from './util/StyledText';\n\nconst ProductDetails = ({price}) => {\n  return (\n    <View style={[styles.container]}>\n      <View>\n        {/* <View style={[styles.row]}>\n          <StyledText\n            children=\"Versions Available\"\n            fontSize=\"16\"\n            fontWeight=\"700\"\n            color=\"#000000\"\n          />\n          <StyledText\n            children=\"20/100\"\n            fontSize=\"16\"\n            fontWeight=\"700\"\n            color=\"#000000\"\n          />\n        </View> */}\n        <View style={[styles.row]}>\n          <StyledText\n            children=\"Price\"\n            fontSize=\"16\"\n            fontWeight=\"400\"\n            color=\"#000000\"\n          />\n          <StyledText\n            children={price + \" ADA\"}\n            fontSize=\"16\"\n            fontWeight=\"400\"\n            color=\"#000000\"\n          />\n        </View>\n      </View>\n      <View>\n        <Pressable style={[styles.button]}>\n          <Text style={styles.text}>Buy/Bid</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'space-between',\n    height: 200,\n    padding: 12,\n    backgroundColor: 'rgba(160,125,40,.25)',\n    margin: 12,\n    borderColor: 'transparent',\n    borderRadius: 5,\n    borderWidth: 1,\n  },\n  image: {\n    width: 170,\n    height: 170,\n    borderRadius: 5,\n  },\n  text: {\n    color: 'white',\n    fontWeight: '700',\n    fontFamily: 'Montserrat_700Bold',\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 150,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 4,\n    backgroundColor: '#A07D28',\n  },\n  gold: {\n    color: '#A07D28',\n    fontFamily: 'Montserrat',\n  },\n});\nexport default ProductDetails;\n","import React, { useContext, useState, useEffect } from 'react';\nimport axios from 'axios'\nimport {StyleSheet, View, Text, Image, SafeAreaView} from 'react-native';\nimport StyledText from '../components/util/StyledText';\nimport ProductDetails from '../components/productDetails';\n\nimport { store } from '../redux/store';\n\nconst NFT = ({route}) => {\n  const { id } = route.params;\n  const [details, setDetails] = useState({});\n  const globalState = useContext(store);\n  const { state} = globalState;\n  useEffect(() => {\n    axios\n        .get(`http://localhost:3000/nft/${id}`)\n        .then((res) => {\n          // setAuthorizationHeader(res.data.token);\n          setDetails(res.data);\n          // console.log(res.data.token);\n          // history.push('/');\n        })\n        .catch((err) => {\n          console.log(err);\n          // dispatch({\n          //   type: SET_ERRORS,\n          //   payload: err.response.data\n          // });\n        });\n  }, [])\n  return (\n    <SafeAreaView style={[styles.container]}>\n      <View>\n        <Image\n          style={[styles.image]}\n          source={details.imgURL}\n        />\n      </View>\n      <View>\n        <StyledText\n          children={details.name}\n          fontSize=\"30\"\n          fontWeight=\"800\"\n          color=\"#000000\"\n        />\n        <StyledText\n          children={details.artist}\n          fontSize=\"30\"\n          fontWeight=\"700\"\n          color=\"#A07D28\"\n        />\n      </View>\n      <View>\n        <Text>\n          {details.description}\n        </Text>\n        <ProductDetails price={details.price}/>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    margin: 12,\n    // borderColor: '#000000',\n    // borderWidth: 1,\n  },\n  image: {\n    width: 360,\n    height: 360,\n    borderRadius: 5,\n  },\n  gold: {\n    color: '#A07D28',\n    fontFamily: 'Montserrat',\n  },\n});\n\nexport default NFT;\n","import React, { useState, useEffect } from 'react'\nimport { StyleSheet, Text, View, Image, Pressable } from 'react-native'\nimport StyledText from '../components/util/StyledText';\n\nconst Countdown = ({ navigation }) => {\n  const startDate = new Date(2021, 10, 24);\n  const [rDay, setRDay] = useState(0);\n  const [rHour, setRHour] = useState(0); //countdown 2 hours.\n  const [rMin, setRMin] = useState(0);\n  const [rSec, setRSec] = useState(0);\n\n  // console.log(startDate.getHours());\n  function getTime() {\n    const currentDays = startDate.getDate() - new Date().getDate();\n\n    const finishHours = startDate.getHours() + startDate.getMinutes() / 60 + startDate.getSeconds() / 3600;\n    const currentHours = new Date().getHours() + new Date().getMinutes() / 60 + new Date().getSeconds() / 3600;\n    const remainingHours = finishHours - currentHours;\n\n    const remainingHour = Math.floor(remainingHours);\n    const remainingMinute = Math.floor((remainingHours - remainingHour) * 60);\n    const remainingSecond = Math.floor(((remainingHours - remainingHour) * 60 - remainingMinute) * 60)\n\n    setRDay(currentDays);\n    setRHour(remainingHour);\n    setRMin(remainingMinute);\n    setRSec(remainingSecond);\n    // console.log(\"count\")\n  }\n  useEffect(() => {\n    const i = setInterval(getTime, 1000);\n    return () => clearInterval(i);\n  }, []);\n\n  return (\n    <View style={[styles.background]}>\n      <View style={[styles.container]}>\n        <Image\n          style={[styles.image]}\n          source={require('../assets/static/fdl-logo.png')}\n        />\n      </View>\n      <View style={[styles.section]}>\n        <Image\n          style={[styles.text]}\n          source={require('../assets/icons/Coming-Soon.svg')}\n        />\n      </View>\n      <View style={[styles.section, styles.row]}>\n        <StyledText\n          children={(\"0\" + rDay)}\n          fontSize=\"30\"\n          fontWeight=\"800\"\n          color=\"#fff\"\n        />\n        <StyledText\n          children=' : '\n          fontSize=\"30\"\n          fontWeight=\"800\"\n          color=\"#A07D28\"\n        />\n        <StyledText\n          children={(\"0\" + rHour).slice(-2)}\n          fontSize=\"30\"\n          fontWeight=\"800\"\n          color=\"#fff\"\n        />\n        <StyledText\n          children=' : '\n          fontSize=\"30\"\n          fontWeight=\"800\"\n          color=\"#A07D28\"\n        />\n        <StyledText\n          children={(\"0\" + rMin).slice(-2)}\n          fontSize=\"30\"\n          fontWeight=\"800\"\n          color=\"#fff\"\n        />\n        <StyledText\n          children=' : '\n          fontSize=\"30\"\n          fontWeight=\"800\"\n          color=\"#A07D28\"\n        />\n        <StyledText\n          children={(\"0\" + rSec).slice(-2)}\n          fontSize=\"30\"\n          fontWeight=\"800\"\n          color=\"#fff\"\n        />\n      </View>\n      <View style={[styles.section, styles.row]}>\n      <Pressable style={{cursor: 'pointer'}} onPress={() => {navigation.navigate('Signup')}}>\n      <StyledText\n          children='Sign up '\n          fontSize=\"26\"\n          fontWeight=\"600\"\n          color=\"#A07D28\"\n        />\n        </Pressable>\n        <StyledText\n          children='to our email list so you can be notified when we go live!'\n          fontSize=\"26\"\n          fontWeight=\"600\"\n          color=\"#fff\"\n        />\n      </View>\n    </View>\n  )\n}\n\nexport default Countdown\n\nconst styles = StyleSheet.create({\n  background: {\n    backgroundColor: \"rgba(160, 125, 40, 0.3)\",\n    height: '100%',\n  },\n  container: {\n    alignItems: 'center',\n    paddingTop: '60px',\n    marginBottom: 10,\n  },\n  section: {\n    alignItems: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  text: {\n    width: 230,\n    height: 60\n  },\n  image: {\n    width: 223,\n    height: 269,\n  },\n})\n","import React, { useContext, useMemo, Fragment } from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { store } from '../redux/store.js';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\n\nimport Login from '../pages/Login';\nimport Signup from '../pages/Signup';\nimport MainScreen from '../components/MainScreen';\nimport NFT from '../pages/NFT';\nimport Countdown from './Countdown.js';\n\n\nconst Stack = createNativeStackNavigator();\n\n\nconst Route = () => {\n  const globalState = useContext(store);\n  const { state } = globalState;\n  return (\n    <Stack.Navigator>\n      {state.authenticated === false ? (\n        <>\n          {/* temporary home page */}\n          <Stack.Screen name=\"Countdown\" component={Countdown} options={{\n            headerShown: false\n          }} />\n          <Stack.Screen name=\"Login\" component={Login} options={{\n            animationEnabled: true, headerTitleAlign: 'center', headerLeft: () => {\n              return <View />\n            }\n          }} />\n          <Stack.Screen name=\"Signup\" component={Signup} options={{\n            animationEnabled: true, headerTitleAlign: 'center', headerLeft: () => {\n              return <View />\n            }\n          }} />\n        </>\n      ) : (\n        <Stack.Screen name=\"Home\" component={MainScreen} options={{ animationEnabled: true, headerShown: false }} />\n      )}\n      <Stack.Screen name=\"NFT\" component={NFT} options={{ animationEnabled: true, headerTitleAlign: 'center', }} />\n    </Stack.Navigator>\n  )\n}\n\nexport default Route\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n    // marginBottom: 20,\n  },\n});","import 'react-native-gesture-handler';\n/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow strict-local\n */\n\nimport React, { useContext, useMemo } from 'react';\n\nimport { StateProvider } from './redux/store.js';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, Montserrat_300Light, Montserrat_600SemiBold, Montserrat_800ExtraBold, Montserrat_700Bold } from '@expo-google-fonts/montserrat';\nimport Route from './pages/route';\n\nconst linking = {\n  prefixes: [\n    /* your linking prefixes */\n    ['http://fdlnft.art']\n  ],\n  config: {\n    /* configuration for matching screens with paths */\n    screens: {\n      Countdown: '/',\n      Login: 'login',\n      Signup: 'signup',\n      Home: {\n        screens: {\n          'My Feed': 'app',\n          'My Profile': 'app/profile',\n          'My Artists': 'app/artists',\n          'My Collection': 'app/collections',\n          'Wallet': 'app/wallet'\n        },\n      },\n      NFT: 'app/nft'\n    },\n  },\n};\n\n\n\n// const setAuthorizationHeader = (token) => {\n//   const FBIdToken = `Bearer ${token}`;\n//   localStorage.setItem('FBIdToken', FBIdToken);\n//   axios.defaults.headers.common['Authorization'] = FBIdToken;\n// };\nconst App = () => {\n  let [fontsLoaded] = useFonts({\n    Montserrat_300Light,\n    Montserrat_600SemiBold,\n    Montserrat_800ExtraBold,\n    Montserrat_700Bold\n  });\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  } else {\n\n    return (\n      <StateProvider>\n        <NavigationContainer linking={linking}>\n          <Route />\n        </NavigationContainer>\n      </StateProvider>\n    );\n  }\n};\nexport default App;","module.exports = __webpack_public_path__ + \"static/media/fdl-logo.a382f473.png\";","module.exports = __webpack_public_path__ + \"static/media/Coming-Soon.8412fe8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/jake-album.11ea1034.jpeg\";"],"sourceRoot":""}